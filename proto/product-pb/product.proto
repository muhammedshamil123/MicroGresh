syntax = "proto3";

package auth;

option go_package = "proto/product-pb";

// 🏗 Product Service Definition
service ProductService {
  rpc CreateProduct (CreateProductRequest) returns (CreateProductResponse);
  rpc DeleteProduct (DeleteProductRequest) returns (DeleteProductResponse);
  rpc EditProduct (EditProductRequest) returns (EditProductResponse);
  rpc ListProducts (ListProductsRequest) returns (ListProductsResponse);
  rpc GetProduct (GetProductRequest) returns (GetProductResponse);
}

// 📌 Product Definition
message Product {
  uint32 id = 1;
  uint32 category_id = 2;
  string name = 3;
  string description = 4;
  string image_url = 5;
  double price = 6;
  double offer_amount = 7;
  uint32 stock_left = 8;
  double rating_sum = 9;
  uint32 rating_count = 10;
  double average_rating = 11;
}

// 🎯 Create Product
message CreateProductRequest {
  uint32 category_id = 1;
  string name = 2;
  string description = 3;
  string image_url = 4;
  double price = 5;
  double offer_amount = 6;
  uint32 stock_left = 7;
}

message CreateProductResponse {
  string message = 1;
  bool success = 2;
}

// 🗑 Delete Product
message DeleteProductRequest {
  uint32 id = 1;
}

message DeleteProductResponse {
  string message = 1;
  bool success = 2;
}

// ✏️ Edit Product
message EditProductRequest {
  uint32 id = 1;
  uint32 category_id = 2;
  string name = 3;
  string description = 4;
  string image_url = 5;
  double price = 6;
  double offer_amount = 7;
  uint32 stock_left = 8;
}

message EditProductResponse {
  string message = 1;
  bool success = 2;
}

// 📜 List Products
message ListProductsRequest {}

message ListProductsResponse {
  string message = 1;
  bool success = 2;
  repeated Product products = 3;
}

// 🔎 Get Product
message GetProductRequest {
  uint32 id = 1;
}

message GetProductResponse {
  string message = 1;
  bool success = 2;
  Product product = 3;
}
